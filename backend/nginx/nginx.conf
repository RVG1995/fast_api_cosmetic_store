worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    # Оптимизация для статических файлов
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    
    # Таймауты
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 65;
    send_timeout 10;
    
    # Буферы
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;
    
    # Логи
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # GZIP сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;
    gzip_disable "MSIE [1-6]\.";

    # Добавляем разрешение имени host.docker.internal
    resolver 127.0.0.11;

    # Настройка upstream для микросервисов
    upstream auth_service {
        server host.docker.internal:8000;
    }

    upstream product_service {
        server host.docker.internal:8001;
    }

    upstream cart_service {
        server host.docker.internal:8002;
    }

    upstream order_service {
        server host.docker.internal:8003;
    }

    upstream review_service {
        server host.docker.internal:8004;
    }

    upstream notifications_service {
        server host.docker.internal:8005;
    }

    # CORS заголовки для всех ответов
    map $sent_http_access_control_allow_credentials $access_control_allow_credentials {
        default "true";
        "~.*" $sent_http_access_control_allow_credentials;
    }

    # Основной сервер
    server {
        listen 80;
        server_name localhost;

        # Обработка ошибок
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/error;
        }

        # Статические файлы React приложения
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # API Gateway общие заголовки
        # Эта локация используется для установки общих заголовков для всех /api/* локаций
        location /api/ {
            # Удаляем CORS-заголовки, которые могут приходить от бэкенд-сервисов
            proxy_hide_header Access-Control-Allow-Origin;
            proxy_hide_header Access-Control-Allow-Methods;
            proxy_hide_header Access-Control-Allow-Headers;
            proxy_hide_header Access-Control-Expose-Headers;
            proxy_hide_header Access-Control-Allow-Credentials;

            # Устанавливаем единые CORS-заголовки
            add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            add_header 'Access-Control-Allow-Credentials' $access_control_allow_credentials always;

            # Специальная обработка для OPTIONS запросов (preflight)
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'http://localhost:3000';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, PATCH, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                add_header 'Access-Control-Allow-Credentials' 'true';
                return 204;
            }

            # Маршрутизация между сервисами по пути
            location /api/auth {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://auth_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
                proxy_cookie_path / /;
                proxy_cookie_domain localhost $host;
            }

            location /api/admin/users {
                # Маршрутизация админских запросов пользователей на auth_service
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://auth_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/products {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://product_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /api/categories {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://product_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /api/brands {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://product_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /api/subcategories {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://product_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /api/countries {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://product_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            }

            location /api/cart {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://cart_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
                proxy_cookie_path / /;
                proxy_cookie_domain localhost $host;
            }

            location /api/admin/carts {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://cart_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/orders {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://order_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/admin/orders {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://order_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/order-statuses {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://order_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/promo-codes {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://order_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/admin/promo-codes {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://order_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/statuses {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://order_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/dadata {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://order_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/reviews {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://review_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/admin/reviews {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://review_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            location /api/notifications {
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://notifications_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            # Блокировка защищенных эндпойнтов межсервисного взаимодействия
            # Product Service internal endpoints
            location ~ ^/api/products/public-batch {
                return 403;
            }
            
            location ~ ^/api/products/([0-9]+)/public-stock {
                return 403;
            }
            
            location ~ ^/api/products/([0-9]+)/admin-stock {
                return 403;
            }
            
            # Notification Service internal endpoints
            location ~ ^/api/settings/check/ {
                return 403;
            }
            
            location ~ ^/api/settings/events {
                return 403;
            }
            
            location ~ ^/api/service/activate-notifications {
                return 403;
            }
            
            # Auth Service internal endpoints для межсервисных запросов
            location ~ ^/api/admin/users/[0-9]+$ {
                # проверяем наличие заголовка service-key или JWT с scope=service
                if ($http_service_key) {
                    return 403;
                }
                if ($http_authorization ~ "Bearer") {
                    return 403;
                }
                # если это обычный запрос без service-аутентификации, передаем его дальше
                rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://auth_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_pass_request_headers on;
            }

            # Для запросов, которые не соответствуют ни одному из указанных маршрутов
            return 404;
        }

        # Обслуживание статических файлов изображений продуктов
        location /static/product_images {
            alias /static/product_images;
            expires 30d;
            add_header Cache-Control "public, max-age=2592000";
            add_header Access-Control-Allow-Origin "http://localhost:3000";
        }
    }
} 